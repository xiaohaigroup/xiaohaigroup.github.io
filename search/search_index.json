{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Xiao' Group","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>Here is Xiao's Group .</p>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"code-examples/","title":"Code-examples","text":"<p>An example of fa codeblock for Python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>Here is another codeblock to show this:</p> add_numbers.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"content-tabs/","title":"Content-tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> testing.js<pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"diagram-examples/","title":"Diagram Examples","text":""},{"location":"diagram-examples/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"diagram-examples/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"how-to-add-a-page/","title":"How to Build Your Own Wiki Page","text":""},{"location":"how-to-add-a-page/#previewing-your-markdown-page","title":"Previewing Your Markdown Page","text":"<p>We recommend using the same engine as the site \u2014 MkDocs \u2014 so you can preview and develop your pages locally.</p>"},{"location":"how-to-add-a-page/#for-windows","title":"For Windows:","text":"<p>1. Open PowerShell and install MkDocs</p> <pre><code># Install MkDocs (and pip if needed)\n# python -m pip install --upgrade pip\npip install mkdocs\n</code></pre> <p>2. Download the site from GitHub and work locally <pre><code># Choose a working folder and clone the repo\ngit clone https://github.com/&lt;xiaohaigroup&gt;/&lt;xiaohaigroup.github.io&gt;.git\n\n# Go into the project\ncd &lt;xiaohaigroup&gt;\n</code></pre></p> <p>3. Serve the site locally (hot-reload preview)</p> <pre><code>mkdocs serve\n</code></pre> <p>Now open the URL it prints (usually http://127.0.0.1:8000). MkDocs will auto-reload when you edit files.</p> <p>4. Add your new wiki page (under <code>docs/</code>)</p> <p>Prepare your own Markdown file and place it inside the <code>docs/</code> folder. If you need a new subdirectory, create it under <code>docs/</code> as well.</p> <p>Examples: <pre><code># Simple, top-level page\nni .\\docs\\my-new-page.md\n\n# Or create a new section directory with a page inside it\nmkdir .\\docs\\my-new-dir\nni .\\docs\\my-new-dir\\my-new-page.md\n</code></pre></p> <p>Start writing in Markdown, and please follow the syntax of other files.</p> <p>Assets like images should also live under <code>docs/images/</code> and be referenced with relative paths: <code>![Alt text](images/my-new-plot.png)</code>.</p> <p>5. Add the page to the navigation (<code>mkdocs.yml</code>)</p> <p>Open <code>mkdocs.yml</code> in the repo root and add your new page to the <code>nav:</code> section. Match the existing style and indentation (YAML is whitespace-sensitive). Here are common patterns; use the one that matches your current config best.</p> <p><pre><code>nav:\n  - Home: index.md\n  - WIKI: my-new-page.md\n      - New Name 1: my-new-page.md\n      - New Name 2: my-new-dir/my-new-page.md\n</code></pre> Paths are relative to docs.</p> <p>6. Commit \u2192 Push a branch \u2192 Open a PR</p> <p>4. Add your new wiki page (under <code>docs/</code>)</p> <p>4. Add your new wiki page (under <code>docs/</code>)</p> <p>4. Add your new wiki page (under <code>docs/</code>)</p>"},{"location":"qyz-test/","title":"qyz-test","text":"<p>An example of fa codeblock for Python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>Here is another codeblock to show this:</p> add_numbers.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"issues/windows_user_variables/","title":"ISSUE","text":""},{"location":"issues/windows_user_variables/#the-problem-is-mainly-you-do-not-add-the-variables-into-the-user-path","title":"The problem is mainly you do not add the variables into the user path.","text":"<p>We recommend using the same engine as the site \u2014 MkDocs \u2014 so you can preview and develop your pages locally.</p>"},{"location":"issues/windows_user_variables/#for-windows","title":"For Windows:","text":"<p>1. Open PowerShell and Check the installation location:</p> <pre><code>pip show mkdocs\n</code></pre> <p>You\u2019ll see something like:</p> <pre><code>Name: mkdocs\nVersion: 1.5.3\nSummary: Project documentation with Markdown.\nHome-page:\nAuthor:\nAuthor-email: Tom Christie &lt;tom@tomchristie.com&gt;\nLicense:\nLocation: c:\\your\\own\\path\\to\\the\\python\\python37\\site-packages\nRequires: click, colorama, ghp-import, importlib-metadata, jinja2, markdown, markupsafe, mergedeep, packaging, pathspec, platformdirs, pyyaml, pyyaml-env-tag, typing-extensions, watchdog\nRequired-by: mkdocs-material\n</code></pre> <p>So the executable script will be located at:</p> <pre><code>Location: C:\\your\\own\\path\\to\\the\\python\\python37\\Scripts\\mkdocs.exe\n</code></pre> <p>2. Add the script directory to your system <code>PATH</code>:</p> <p>Please follow the steps below.</p> <p>2.1 Open the Control Panel and click \"System\": </p> <p>2.2 Click \"System settings\" on the right: </p> <p>2.3 Click \"Advanced system settings\" and then the \"Environment Variables\" button: </p> <p>2.4 Under \"User variables\", click \"Edit\": </p> <p>2.5 Click \"New\", then paste the path where <code>mkdocs.exe</code> is located (ending with <code>Scripts</code>):</p> <pre><code>C:\\your\\own\\path\\to\\the\\python\\python37\\Scripts\n</code></pre> <p></p> <p>3. If everything goes well, you can check your own markdown file. Create a folder for it and run:</p> <pre><code>mkdocs serve\n</code></pre> <p>Now you can check your own markdown file or the whole page locally.</p>"}]}